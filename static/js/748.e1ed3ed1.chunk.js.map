{"version":3,"file":"static/js/748.e1ed3ed1.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js","utils/setContentList.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img src={img} style={{ display: 'block', width: '250px', height: '250px', objectFit: \n        'contain', margin: '0 auto' }} alt=\"error\" />\n    )\n};\n\nexport default ErrorMessage;","import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Link } from 'react-router-dom';\nimport {useState, useEffect} from 'react';\n\nimport setContentList from '../../utils/setContentList';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    \n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n    \n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    };  \n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        };\n\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    };  \n\n    function renderItems(data) {\n        const items = data.map((item) => {\n            const { id, title, price, thumbnail } = item;\n\n            const styleImg = (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n                ? { objectFit: \"contain\" } : { objectFit: \"cover\" });\n\n            return (\n                <CSSTransition\n                    key={id}\n                    timeout={600}\n                    classNames=\"comics__item\">\n                    <li\n                        className=\"comics__item\" >\n                        {/* eslint-disable-next-line */}\n                        <Link to={`/comics/${id}`}>\n                            <img src={thumbnail}\n                                alt={title}\n                                className=\"comics__item-img\"\n                                style={styleImg} />\n                            <div className=\"comics__item-name\">{title}</div>\n                            <div className=\"comics__item-price\">{price}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        });\n        return (\n            <TransitionGroup className=\"comics__grid\" component=\"ul\" >\n                {items}\n            </TransitionGroup>\n        )\n    };\n\n    return (\n        <div className=\"comics__list\">\n            {setContentList(process, () => renderItems(comicsList), newItemLoading)}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)} >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet';\n\nimport ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>  \n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner />\n            <ComicsList />\n        </>\n    )\n};\n\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=0583c8fb8349856863fd5227fc3f33bd';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=\n        ${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    };\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    };\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=\n        ${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    };\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    };\n\n    const getCharacterByName = async (name) => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    };\n    \n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: (char.name.length > 20) ? `${char.name.slice(0, 22)}...` : char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` \n            : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items,\n        }\n    };\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'NOT AVAILABLE',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            language: comics.textObjects.language || 'en-us',\n        }\n    };\n\n    return {process, \n            getAllCharacters, \n            getCharacter, \n            getAllComics, \n            getCharacterByName, \n            getComic, \n            clearError,\n            setProcess\n        };\n}\n\nexport default useMarvelService;","import {useState, useCallback} from 'react';\n\nexport function useHttp() {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(error) {\n            setProcess('error');\n            throw error;\n        }\n\n    }, []);\n    \n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return {request, clearError, process, setProcess};\n};","import Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\n\nconst setContentList = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner />\n        case 'loading':\n            return newItemLoading ? <Component /> : <Spinner />;\n        case 'error':\n            return <ErrorMessage />\n        case 'confirmed':\n            return <Component />\n        default:\n            throw new Error('Unexpected process state.');\n    }\n};\n\nexport default setContentList;"],"names":["className","src","avengers","alt","avengersLogo","img","style","display","width","height","objectFit","margin","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","process","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","setContentList","data","items","map","item","id","title","price","thumbnail","styleImg","CSSTransition","timeout","classNames","to","TransitionGroup","component","renderItems","disabled","onClick","Helmet","name","content","AppBanner","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","res","results","_transformCharacter","getCharacter","_transformComics","getComic","getCharacterByName","char","slice","description","path","extension","homepage","urls","wiki","comics","prices","pageCount","language","textObjects","Component"],"sourceRoot":""}