{"version":3,"file":"static/js/99.6ce186b8.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img src={img} style={{ display: 'block', width: '250px', height: '250px', objectFit: \n        'contain', margin: '0 auto' }} alt=\"error\" />\n    )\n};\n\nexport default ErrorMessage;","import { Link } from 'react-router-dom';\nimport {useState, useEffect} from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    \n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { loading, error, getAllComics } = useMarvelService();\n    \n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded);\n    };  \n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        };\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    };  \n\n    function renderItems(data) {\n        const items = data.map((item) => {\n            const { id, title, price, thumbnail } = item;\n\n            const styleImg = (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n                ? { objectFit: \"contain\" } : { objectFit: \"cover\" });\n\n            return (\n                <li \n                    className=\"comics__item\"\n                    key={id} >\n                    {/* eslint-disable-next-line */}\n                    <Link to={`/comics/${id}`}>\n                        <img src={thumbnail}\n                            alt={title}\n                            className=\"comics__item-img\"\n                            style={styleImg} />\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    };\n\n    const items = renderItems(comicsList);\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)} >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner />\n            <ComicsList />\n        </>\n    )\n};\n\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=0583c8fb8349856863fd5227fc3f33bd';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=\n        ${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    };\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    };\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=\n        ${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    };\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    };\n    \n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: (char.name.length > 20) ? `${char.name.slice(0, 22)}...` : char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` \n            : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items,\n        }\n    };\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'NOT AVAILABLE',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            description: comics.description || 'There is no description',\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n            language: comics.textObjects.language || 'en-us',\n        }\n    };\n\n    return {loading, error, getAllCharacters, getCharacter, getAllComics, getComic, clearError};\n}\n\nexport default useMarvelService;","import {useState, useCallback} from 'react';\n\nexport function useHttp() {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n\n            return data;\n        } catch(error) {\n            setLoading(false);\n            setError(error.message);\n            throw error;\n        }\n\n    }, []);\n    \n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, request, error, clearError};\n};","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["src","img","style","display","width","height","objectFit","margin","alt","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","data","map","item","id","title","price","thumbnail","styleImg","className","to","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","avengers","avengersLogo","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","res","results","_transformCharacter","getCharacter","_transformComics","getComic","char","name","slice","description","path","extension","homepage","urls","wiki","comics","prices","pageCount","language","textObjects","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}